name: Build fullconenat

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'true'
        
env:
  #SDK_URL: https://downloads.openwrt.org/releases/19.07.3/targets/ramips/mt7621/openwrt-sdk-19.07.3-ramips-mt7621_gcc-7.5.0_musl.Linux-x86_64.tar.xz
  SDK_URL: https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/openwrt-sdk-19.07.7-x86-64_gcc-7.5.0_musl.Linux-x86_64.tar.xz
  CONFIG_FILE: x86_64.config

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt -qq update
        sudo -E apt -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Download SDK
      working-directory: /workdir
      run: |
        wget $SDK_URL -O sdk.tar.xz
        mkdir sdk
        tar -xf sdk.tar.xz -C sdk --strip-components 1
        ln -sf /workdir/sdk $GITHUB_WORKSPACE/sdk
        
    - name: Clone fullconenat
      working-directory: /workdir/sdk
      run: |
        git clone -b master --single-branch https://github.com/LGA1150/openwrt-fullconenat package/fullconenat
        mkdir -p package/network/config/firewall/patches
        wget -P package/network/config/firewall/patches/ https://github.com/LGA1150/fullconenat-fw3-patch/raw/master/fullconenat.patch

        
    - name: Update feeds
      run: cd sdk && ./scripts/feeds update -a

    - name: Install feeds
      run: cd sdk && ./scripts/feeds install -a
      
    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE sdk/.config
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      
    - name: Compile the fullconenat
      id: compile
      run: |
        cd sdk
        echo -e "$(nproc) thread compile"
        make package/fullconenat/compile -j$(nproc) || make package/fullconenat/compile -j1 || make package/fullconenat/compile -j1 V=s

    - name: Compile the firewall
      run: |
        cd sdk
        echo -e "$(nproc) thread compile"
        make package/firewall/compile -j$(nproc) || make package/firewall/compile -j1 || make package/firewall/compile -j1 V=s

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      with:
        name: fullconenat
        path: sdk/bin
